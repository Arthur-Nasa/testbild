// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: c95mFDtsQD22zpZcHK8Lci
// Component: oa15Iddil2
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Navigation from "../../Navigation"; // plasmic-import: suFVYL5EUe/component
import Logo from "../../Logo"; // plasmic-import: ynIdAZgZJy/component
import TitleSubtitle from "../../TitleSubtitle"; // plasmic-import: BzXRBzu1sd/component
import Form from "../../Form"; // plasmic-import: pXYVMs4P-l/component
import Botao from "../../Botao"; // plasmic-import: 2B39Djfxdt/component

import { useScreenVariants } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: _eAYH824Sv/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_blank_project.module.css"; // plasmic-import: c95mFDtsQD22zpZcHK8Lci/projectcss
import * as sty from "./PlasmicHomepage.module.css"; // plasmic-import: oa15Iddil2/css

export type PlasmicHomepage__VariantMembers = {};

export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {
  children?: React.ReactNode;
  farFarAwayBehindTheWordMountainsFarFromTheCountriesVokaliaAndConsonantiaThereLiveTheBlindTexts?: React.ReactNode;
  slot3?: React.ReactNode;
  children2?: React.ReactNode;
};

type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>(
  "children",
  "farFarAwayBehindTheWordMountainsFarFromTheCountriesVokaliaAndConsonantiaThereLiveTheBlindTexts",
  "slot3",
  "children2"
);

export type PlasmicHomepage__OverridesType = {
  root?: p.Flex<"div">;
  banner?: p.Flex<"div">;
  bg?: p.Flex<"div">;
  logo?: p.Flex<typeof Logo>;
  titleSubtitle?: p.Flex<typeof TitleSubtitle>;
  form?: p.Flex<typeof Form>;
  botao?: p.Flex<typeof Botao>;
  frame8?: p.Flex<"div">;
  rectangle8?: p.Flex<"div">;
  frame?: p.Flex<"div">;
  rectangle?: p.Flex<"div">;
  frame5?: p.Flex<"div">;
  rectangle5?: p.Flex<"div">;
  frame6?: p.Flex<"div">;
  rectangle6?: p.Flex<"div">;
  frame4?: p.Flex<"div">;
  rectangle4?: p.Flex<"div">;
  frame2?: p.Flex<"div">;
  rectangle2?: p.Flex<"div">;
  frame12?: p.Flex<"div">;
  rectangle12?: p.Flex<"div">;
  frame3?: p.Flex<"div">;
  rectangle3?: p.Flex<"div">;
  frame14?: p.Flex<"div">;
  rectangle14?: p.Flex<"div">;
  frame13?: p.Flex<"div">;
  rectangle13?: p.Flex<"div">;
  frame10?: p.Flex<"div">;
  rectangle10?: p.Flex<"div">;
  frame7?: p.Flex<"div">;
  rectangle7?: p.Flex<"div">;
  frame11?: p.Flex<"div">;
  rectangle11?: p.Flex<"div">;
  frame9?: p.Flex<"div">;
  rectangle9?: p.Flex<"div">;
  frame15?: p.Flex<"div">;
  rectangle15?: p.Flex<"div">;
};

export interface DefaultHomepageProps {
  dataFetches: PlasmicHomepage__Fetches;
}

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;
  dataFetches?: PlasmicHomepage__Fetches;
  forNode?: string;
}) {
  const { variants, args, overrides, forNode, dataFetches } = props;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants()
  });

  return (
    <React.Fragment>
      <Head>
        <title key="title">{""}</title>
        <meta key="og:title" property="og:title" content={""} />
        <meta
          key="description"
          name="description"
          property="og:description"
          content={""}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={defaultcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            defaultcss.all,
            projectcss.root_reset,
            sty.root
          )}
        >
          {(
            hasVariant(globalVariants, "screen", "mobileOnly") ? true : false
          ) ? (
            <Navigation
              className={classNames("__wab_instance", sty.navigation__nJdmI)}
            >
              {p.renderPlasmicSlot({
                defaultContents: (
                  <p.PlasmicLink
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.link__e4P1H
                    )}
                    component={Link}
                    href={"https://www.plasmic.app/" as const}
                    platform={"nextjs"}
                  >
                    {"Politica de Privacidade"}
                  </p.PlasmicLink>
                ),

                value: args.children2
              })}
            </Navigation>
          ) : null}

          <div
            data-plasmic-name={"banner"}
            data-plasmic-override={overrides.banner}
            className={classNames(defaultcss.all, sty.banner)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"bg"}
              data-plasmic-override={overrides.bg}
              hasGap={true}
              className={classNames(defaultcss.all, sty.bg)}
            >
              <div className={classNames(defaultcss.all, sty.freeBox___3RtFf)}>
                <Logo
                  data-plasmic-name={"logo"}
                  data-plasmic-override={overrides.logo}
                  className={classNames("__wab_instance", sty.logo)}
                />

                <Navigation
                  className={classNames(
                    "__wab_instance",
                    sty.navigation__raeq6
                  )}
                >
                  {p.renderPlasmicSlot({
                    defaultContents: null,
                    value: args.children
                  })}
                </Navigation>
              </div>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.columns__zQzMh)}
              >
                <div className={classNames(defaultcss.all, sty.column__xxgqt)}>
                  <TitleSubtitle
                    data-plasmic-name={"titleSubtitle"}
                    data-plasmic-override={overrides.titleSubtitle}
                    className={classNames("__wab_instance", sty.titleSubtitle)}
                    farFarAwayBehindTheWordMountainsFarFromTheCountriesVokaliaAndConsonantiaThereLiveTheBlindTexts={p.renderPlasmicSlot(
                      {
                        defaultContents:
                          "Um projeto completo pra você morar bem, com 12 opções de plantas, torre única e em uma excelente localização. Oben, muito acima do comum.",
                        value:
                          args.farFarAwayBehindTheWordMountainsFarFromTheCountriesVokaliaAndConsonantiaThereLiveTheBlindTexts
                      }
                    )}
                    slot3={p.renderPlasmicSlot({
                      defaultContents: "Conheça o Oben ",
                      value: args.slot3
                    })}
                  />
                </div>

                <div className={classNames(defaultcss.all, sty.column___8Bcnx)}>
                  <Form
                    data-plasmic-name={"form"}
                    data-plasmic-override={overrides.form}
                    className={classNames("__wab_instance", sty.form)}
                  >
                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.text__z6Nuy
                      )}
                    >
                      {"Preencha o Formulário"}
                    </div>
                  </Form>
                </div>
              </p.Stack>

              {(
                hasVariant(globalVariants, "screen", "mobileOnly") ? true : true
              ) ? (
                <Botao
                  data-plasmic-name={"botao"}
                  data-plasmic-override={overrides.botao}
                  className={classNames("__wab_instance", sty.botao)}
                  ourShowcase={"CONVERSE COM UM CORRETOR"}
                />
              ) : null}
            </p.Stack>
          </div>

          <div className={classNames(defaultcss.all, sty.freeBox__pKhgU)}>
            <div className={classNames(defaultcss.all, sty.freeBox__yCg5A)}>
              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.text__npKQc
                )}
              >
                {"DIFERENCIAIS"}
              </div>
            </div>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.freeBox__sXeOz)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.columns__ko6O0)}
              >
                <div className={classNames(defaultcss.all, sty.column__gqib0)}>
                  <div
                    data-plasmic-name={"frame8"}
                    data-plasmic-override={overrides.frame8}
                    className={classNames(defaultcss.all, sty.frame8)}
                  >
                    <div
                      data-plasmic-name={"rectangle8"}
                      data-plasmic-override={overrides.rectangle8}
                      className={classNames(defaultcss.all, sty.rectangle8)}
                    />

                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.text__lATer
                      )}
                    >
                      {"Medidores individuais para energia, água e gás"}
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"frame"}
                    data-plasmic-override={overrides.frame}
                    className={classNames(defaultcss.all, sty.frame)}
                  >
                    <div
                      data-plasmic-name={"rectangle"}
                      data-plasmic-override={overrides.rectangle}
                      className={classNames(defaultcss.all, sty.rectangle)}
                    />

                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.text__yQzk7
                      )}
                    >
                      {"Antissucção piscina"}
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"frame5"}
                    data-plasmic-override={overrides.frame5}
                    className={classNames(defaultcss.all, sty.frame5)}
                  >
                    <div
                      data-plasmic-name={"rectangle5"}
                      data-plasmic-override={overrides.rectangle5}
                      className={classNames(defaultcss.all, sty.rectangle5)}
                    />

                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.text__wlXjy
                      )}
                    >
                      {"Descarte seletivo"}
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"frame6"}
                    data-plasmic-override={overrides.frame6}
                    className={classNames(defaultcss.all, sty.frame6)}
                  >
                    <div
                      data-plasmic-name={"rectangle6"}
                      data-plasmic-override={overrides.rectangle6}
                      className={classNames(defaultcss.all, sty.rectangle6)}
                    />

                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.text___84Br
                      )}
                    >
                      {"Sistema dual flush"}
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"frame4"}
                    data-plasmic-override={overrides.frame4}
                    className={classNames(defaultcss.all, sty.frame4)}
                  >
                    <div
                      data-plasmic-name={"rectangle4"}
                      data-plasmic-override={overrides.rectangle4}
                      className={classNames(defaultcss.all, sty.rectangle4)}
                    />

                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.text__bfKx0
                      )}
                    >
                      {"Áreas de lazer entregues equipadas e decoradas"}
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"frame2"}
                    data-plasmic-override={overrides.frame2}
                    className={classNames(defaultcss.all, sty.frame2)}
                  >
                    <div
                      data-plasmic-name={"rectangle2"}
                      data-plasmic-override={overrides.rectangle2}
                      className={classNames(defaultcss.all, sty.rectangle2)}
                    />

                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.text__azPc4
                      )}
                    >
                      {"Automação das áreas comuns"}
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"frame12"}
                    data-plasmic-override={overrides.frame12}
                    className={classNames(defaultcss.all, sty.frame12)}
                  >
                    <div
                      data-plasmic-name={"rectangle12"}
                      data-plasmic-override={overrides.rectangle12}
                      className={classNames(defaultcss.all, sty.rectangle12)}
                    />

                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.text__tEzo8
                      )}
                    >
                      {"Wifi nas áreas de lazer"}
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"frame3"}
                    data-plasmic-override={overrides.frame3}
                    className={classNames(defaultcss.all, sty.frame3)}
                  >
                    <div
                      data-plasmic-name={"rectangle3"}
                      data-plasmic-override={overrides.rectangle3}
                      className={classNames(defaultcss.all, sty.rectangle3)}
                    />

                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.text___77Ymy
                      )}
                    >
                      {"Ambientes internos de lazer climatizados"}
                    </div>
                  </div>
                </div>

                <div className={classNames(defaultcss.all, sty.column__lN1Gc)}>
                  <div
                    data-plasmic-name={"frame14"}
                    data-plasmic-override={overrides.frame14}
                    className={classNames(defaultcss.all, sty.frame14)}
                  >
                    <div
                      data-plasmic-name={"rectangle14"}
                      data-plasmic-override={overrides.rectangle14}
                      className={classNames(defaultcss.all, sty.rectangle14)}
                    />

                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.text__jAtgL
                      )}
                    >
                      {"Ponto para carga de carro elétrico."}
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"frame13"}
                    data-plasmic-override={overrides.frame13}
                    className={classNames(defaultcss.all, sty.frame13)}
                  >
                    <div
                      data-plasmic-name={"rectangle13"}
                      data-plasmic-override={overrides.rectangle13}
                      className={classNames(defaultcss.all, sty.rectangle13)}
                    />

                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.text___6Cgif
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "Torneiras com temporizador nos sanitários das áreas de lazer"
                        : "Torneiras com temporizador nos sanitários das áreas de lazer"}
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"frame10"}
                    data-plasmic-override={overrides.frame10}
                    className={classNames(defaultcss.all, sty.frame10)}
                  >
                    <div
                      data-plasmic-name={"rectangle10"}
                      data-plasmic-override={overrides.rectangle10}
                      className={classNames(defaultcss.all, sty.rectangle10)}
                    />

                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.text__tp3C
                      )}
                    >
                      {"Estacionamento coberto"}
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"frame7"}
                    data-plasmic-override={overrides.frame7}
                    className={classNames(defaultcss.all, sty.frame7)}
                  >
                    <div
                      data-plasmic-name={"rectangle7"}
                      data-plasmic-override={overrides.rectangle7}
                      className={classNames(defaultcss.all, sty.rectangle7)}
                    />

                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.text__krJnr
                      )}
                    >
                      {"Portas e guarnições com madeira certificada"}
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"frame11"}
                    data-plasmic-override={overrides.frame11}
                    className={classNames(defaultcss.all, sty.frame11)}
                  >
                    <div
                      data-plasmic-name={"rectangle11"}
                      data-plasmic-override={overrides.rectangle11}
                      className={classNames(defaultcss.all, sty.rectangle11)}
                    />

                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.text__mArBc
                      )}
                    >
                      {
                        "Esquadrias integradas com venezianas deslizantes nos dormitórios"
                      }
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"frame9"}
                    data-plasmic-override={overrides.frame9}
                    className={classNames(defaultcss.all, sty.frame9)}
                  >
                    <div
                      data-plasmic-name={"rectangle9"}
                      data-plasmic-override={overrides.rectangle9}
                      className={classNames(defaultcss.all, sty.rectangle9)}
                    />

                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.text__cZbtk
                      )}
                    >
                      {"Sensores de presença nas áreas comuns"}
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"frame15"}
                    data-plasmic-override={overrides.frame15}
                    className={classNames(defaultcss.all, sty.frame15)}
                  >
                    <div
                      data-plasmic-name={"rectangle15"}
                      data-plasmic-override={overrides.rectangle15}
                      className={classNames(defaultcss.all, sty.rectangle15)}
                    />

                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.text___12J8L
                      )}
                    >
                      {
                        "Entradas independentes para moradores, visitantes e serviços com espera"
                      }
                    </div>
                  </div>
                </div>
              </p.Stack>
            </p.Stack>
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "banner",
    "bg",
    "logo",
    "titleSubtitle",
    "form",
    "botao",
    "frame8",
    "rectangle8",
    "frame",
    "rectangle",
    "frame5",
    "rectangle5",
    "frame6",
    "rectangle6",
    "frame4",
    "rectangle4",
    "frame2",
    "rectangle2",
    "frame12",
    "rectangle12",
    "frame3",
    "rectangle3",
    "frame14",
    "rectangle14",
    "frame13",
    "rectangle13",
    "frame10",
    "rectangle10",
    "frame7",
    "rectangle7",
    "frame11",
    "rectangle11",
    "frame9",
    "rectangle9",
    "frame15",
    "rectangle15"
  ],
  banner: ["banner", "bg", "logo", "titleSubtitle", "form", "botao"],
  bg: ["bg", "logo", "titleSubtitle", "form", "botao"],
  logo: ["logo"],
  titleSubtitle: ["titleSubtitle"],
  form: ["form"],
  botao: ["botao"],
  frame8: ["frame8", "rectangle8"],
  rectangle8: ["rectangle8"],
  frame: ["frame", "rectangle"],
  rectangle: ["rectangle"],
  frame5: ["frame5", "rectangle5"],
  rectangle5: ["rectangle5"],
  frame6: ["frame6", "rectangle6"],
  rectangle6: ["rectangle6"],
  frame4: ["frame4", "rectangle4"],
  rectangle4: ["rectangle4"],
  frame2: ["frame2", "rectangle2"],
  rectangle2: ["rectangle2"],
  frame12: ["frame12", "rectangle12"],
  rectangle12: ["rectangle12"],
  frame3: ["frame3", "rectangle3"],
  rectangle3: ["rectangle3"],
  frame14: ["frame14", "rectangle14"],
  rectangle14: ["rectangle14"],
  frame13: ["frame13", "rectangle13"],
  rectangle13: ["rectangle13"],
  frame10: ["frame10", "rectangle10"],
  rectangle10: ["rectangle10"],
  frame7: ["frame7", "rectangle7"],
  rectangle7: ["rectangle7"],
  frame11: ["frame11", "rectangle11"],
  rectangle11: ["rectangle11"],
  frame9: ["frame9", "rectangle9"],
  rectangle9: ["rectangle9"],
  frame15: ["frame15", "rectangle15"],
  rectangle15: ["rectangle15"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  banner: "div";
  bg: "div";
  logo: typeof Logo;
  titleSubtitle: typeof TitleSubtitle;
  form: typeof Form;
  botao: typeof Botao;
  frame8: "div";
  rectangle8: "div";
  frame: "div";
  rectangle: "div";
  frame5: "div";
  rectangle5: "div";
  frame6: "div";
  rectangle6: "div";
  frame4: "div";
  rectangle4: "div";
  frame2: "div";
  rectangle2: "div";
  frame12: "div";
  rectangle12: "div";
  frame3: "div";
  rectangle3: "div";
  frame14: "div";
  rectangle14: "div";
  frame13: "div";
  rectangle13: "div";
  frame10: "div";
  rectangle10: "div";
  frame7: "div";
  rectangle7: "div";
  frame11: "div";
  rectangle11: "div";
  frame9: "div";
  rectangle9: "div";
  frame15: "div";
  rectangle15: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
    dataFetches?: PlasmicHomepage__Fetches;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicHomepage__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicHomepage__ArgProps,
      internalVariantPropNames: PlasmicHomepage__VariantProps
    });

    const { dataFetches } = props;

    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    banner: makeNodeComponent("banner"),
    bg: makeNodeComponent("bg"),
    logo: makeNodeComponent("logo"),
    titleSubtitle: makeNodeComponent("titleSubtitle"),
    form: makeNodeComponent("form"),
    botao: makeNodeComponent("botao"),
    frame8: makeNodeComponent("frame8"),
    rectangle8: makeNodeComponent("rectangle8"),
    frame: makeNodeComponent("frame"),
    rectangle: makeNodeComponent("rectangle"),
    frame5: makeNodeComponent("frame5"),
    rectangle5: makeNodeComponent("rectangle5"),
    frame6: makeNodeComponent("frame6"),
    rectangle6: makeNodeComponent("rectangle6"),
    frame4: makeNodeComponent("frame4"),
    rectangle4: makeNodeComponent("rectangle4"),
    frame2: makeNodeComponent("frame2"),
    rectangle2: makeNodeComponent("rectangle2"),
    frame12: makeNodeComponent("frame12"),
    rectangle12: makeNodeComponent("rectangle12"),
    frame3: makeNodeComponent("frame3"),
    rectangle3: makeNodeComponent("rectangle3"),
    frame14: makeNodeComponent("frame14"),
    rectangle14: makeNodeComponent("rectangle14"),
    frame13: makeNodeComponent("frame13"),
    rectangle13: makeNodeComponent("rectangle13"),
    frame10: makeNodeComponent("frame10"),
    rectangle10: makeNodeComponent("rectangle10"),
    frame7: makeNodeComponent("frame7"),
    rectangle7: makeNodeComponent("rectangle7"),
    frame11: makeNodeComponent("frame11"),
    rectangle11: makeNodeComponent("rectangle11"),
    frame9: makeNodeComponent("frame9"),
    rectangle9: makeNodeComponent("rectangle9"),
    frame15: makeNodeComponent("frame15"),
    rectangle15: makeNodeComponent("rectangle15"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
